---
title: Configuring with Vault
owner: Spring Cloud Services
---

<strong><%= modified_date %></strong>

## <a id="overview"></a>Overview

[HashiCorp Vault](https://www.vaultproject.io) is a secrets management tool, which encrypts and stores credentials, API keys, and other secrets for use in distributed systems. It provides support for access control lists, secret revocation, auditing, and leases and renewals, and includes special capabilities for common infrastructure and systems such as AWS, MySQL, and RabbitMQ, among others. For more information about Vault, see the [documentation](https://www.vaultproject.io/docs/index.html).

Spring Cloud Config provides a Vault backend so that the Spring Cloud Config Server can serve configuration stored in Vault. The Spring Cloud Services Config Server supports this backend and can serve configuration stored in Vault to client applications which have been given access to the Vault server (this includes provision of a Vault access token for the client application).

<p class='note'><strong>Important</strong>: Spring Cloud Services does not provide a HashiCorp Vault server. You must provide your own Vault server in order to use Config Server with Vault.</p>

See below for information about configuring a Config Server service instance to use a HashiCorp Vault server for a configuration source.

## <a id="general-configuration"></a>General Configuration

Parameters used to configure a configuration source are part of a JSON object called `vault`, as in `{"vault": { "host": "127.0.0.1", "port": "8200" } }`. A Config Server instance can support just one Vault backend so only one `vault` object is permitted in the configuration parameters.

General parameters used to configure a Config Server configuration source are listed below.

| Parameter                     | Function                                                                                     |
|-------------------------------|----------------------------------------------------------------------------------------------|
| <code>host</code>             | The host of the Vault server                                                                 |
| <code>port</code>             | The port of the Vault server                                                                 |
| <code>scheme</code>           | The URI scheme used in accessing the Vault server (default value: `http`)                    |
| <code>backend</code>          | The name of the Vault backend from which to retrieve configuration (default value: `secret`) |
| <code>defaultKey</code>       | The default key from which to retrieve configuration (default value: `application`)          |
| <code>profileSeparator</code> | The value used to separate profiles (default value: `,`)                                     |

The value of `defaultKey` is masked in the Config Server dashboard.

For information about writing a client application that accesses configuration values from a Config Server which has been configured to use Vault, see the [Use a HashiCorp Vault Server](/spring-cloud-services/config-server/writing-client-applications.html#use-a-hashicorp-vault-server) section of the [Writing Client Applications](/spring-cloud-services/config-server/writing-client-applications.html) topic.
